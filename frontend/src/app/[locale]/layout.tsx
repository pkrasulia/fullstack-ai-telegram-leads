import type { Metadata } from 'next';
import { NextIntlClientProvider, useMessages } from 'next-intl';
import { GeistSans } from 'geist/font/sans';
import { Inter as FontSans } from 'next/font/google';
import './globals.css';
import { ThemeProvider } from '@/components/theme-provider';
import AuthProvider from '@/services/auth/auth-provider';
import LeavePageProvider from '@/services/leave-page/leave-page-provider';
import QueryClientProvider from '@/services/react-query/query-client-provider';
import queryClient from '@/services/react-query/query-client';
import ReactQueryDevtools from '@/services/react-query/react-query-devtools';
import GoogleAuthProvider from '@/services/social-auth/google/google-auth-provider';
import FacebookAuthProvider from '@/services/social-auth/facebook/facebook-auth-provider';
import { Toaster } from '@/components/ui/sonner';

import { cn } from '@/lib/utils';
import StoreProvider from '@/app/StoreProvider';

const fontSans = FontSans({
  subsets: ['latin'],
  variable: '--font-sans',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

interface RootLayoutProps {
  children: React.ReactNode;
  params: {
    locale: string;
  };
}

export default function RootLayout({
  children,
  params: { locale },
}: Readonly<RootLayoutProps>) {
  const messages = useMessages();

  return (
    <html lang={locale} suppressHydrationWarning>
      <body className={GeistSans.className}>
        <QueryClientProvider client={queryClient}>
          <NextIntlClientProvider messages={messages}>
            <ReactQueryDevtools initialIsOpen={false} />
            <ThemeProvider
              attribute="class"
              defaultTheme="dark"
              enableSystem
              disableTransitionOnChange
            >
              <AuthProvider>
                <StoreProvider>
                  <GoogleAuthProvider>
                    <FacebookAuthProvider>
                      <LeavePageProvider>{children}</LeavePageProvider>
                    </FacebookAuthProvider>
                  </GoogleAuthProvider>
                </StoreProvider>
              </AuthProvider>
              <Toaster />
            </ThemeProvider>
          </NextIntlClientProvider>
        </QueryClientProvider>
      </body>
    </html>
  );
}
