server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /var/lib/promtail/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: docker-services
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=enabled"]
    
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container_name'
      
      - source_labels: ['__meta_docker_container_label_service']
        target_label: 'service'
      
      - source_labels: ['__meta_docker_container_label_language']
        target_label: 'language'
      
      - source_labels: ['__meta_docker_container_label_logging']
        target_label: 'logging'

    pipeline_stages:
      - docker: {}
      
      - drop:
          source: container_name
          expression: "(loki|grafana|prometheus|promtail)"
      
      - match:
          selector: '{service="backend"}'
          stages:
            - regex:
                expression: '^\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\s+\[(?P<level>\w+)\]:\s+(?P<message>.*)'
            - json:
                expressions:
                  module: module
                  error_msg: error
                  stack: stack
                source: message
            - labels:
                level:
      
      - match:
          selector: '{language="python"}'
          stages:
            - regex:
                expression: '^(?P<level>DEBUG|INFO|WARNING|ERROR|CRITICAL):'
            - labels:
                level:
            - regex:
                expression: '^\[(?P<level>\w+)\]'
            - labels:
                level:
      
      - match:
          selector: '{service="frontend"}'
          stages:
            - static_labels:
                level: info